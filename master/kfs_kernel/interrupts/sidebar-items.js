initSidebarItems({"fn":[["alignment_check_handler","Alignment check interruption handler. Kills the process unconditionally."],["bound_range_exceeded_handler","Bound range exceeded interruption handler. Kills the process unconditionally."],["breakpoint_handler","Breakpoint interruption handler. Does nothing."],["check_thread_killed","Checks if our thread was killed, in which case unschedule ourselves."],["debug_handler","Debug interruption handler. Kills the process unconditionally."],["device_not_available_handler","Device not available interruption handler. Kills the process unconditionally."],["divide_by_zero_handler","Divide by zero interruption handler. Kills the process unconditionally."],["double_fault_handler","Double fault handler. Panics the kernel unconditionally."],["general_protection_fault_handler","General protection fault handler. Kills the process unconditionally."],["init","Initialize the interrupt subsystem. Sets up the PIC and the IDT."],["invalid_opcode_handler","Invalid opcode interruption handler. Kills the process unconditionally."],["invalid_tss_handler","Invalid tss interruption handler. Panics the kernel unconditionally."],["machine_check_handler","Machine check interruption handler. Panics the kernel unconditionally."],["non_maskable_interrupt_handler","Non maskable interruption handler. Unconditionally panics the kernel."],["overflow_handler","Overflow interruption handler. Kills the process unconditionally."],["page_fault_handler","Page fault handler. Kills the process unconditionally."],["panic_on_exception","Panics with an informative message."],["security_exception_handler","Security exception handler. Panics the kernel unconditionally."],["segment_not_present_handler","Segment not present interruption handler. Kills the process unconditionally."],["simd_floating_point_handler","SIMD exception handler. Kills the process unconditionally."],["stack_segment_fault_handler","Stack segment fault handler. Kills the process unconditionally."],["syscall_handler","This is the function called on int 0x80."],["virtualization_handler","Virtualization exception handler. Kills the process unconditionally."],["x87_floating_point_handler","X87 floating point interruption handler. Kills the process unconditionally."]],"mod":[["irq","IRQ Handling"],["syscalls","Syscall implementations"]],"static":[["IDT",""]],"struct":[["IDT","IDT address. Initialized in `init()`."]]});